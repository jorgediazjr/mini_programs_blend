#!/usr/bin/python

import os, argparse, fnmatch, subprocess
from datetime import datetime
from shutil import copy

def find_files(root_path, pattern):
	f = []
	for root, dirs, files in os.walk(root_path):
		for name in files:
			if fnmatch.fnmatch(name, pattern):
				f.append(os.path.join(root, name))
	return f


def process_promising_heights(promising_heights_paths):
    path_heights = {}
    heights = []
    for path in promising_heights_paths:
        with open(path, 'r') as file:
            for line in file:
                if line.startswith('#'):
                    continue
                else:
                    try:
                        heights.append(float(line.split()[1]))
                    except:
                        pass
        heights = sorted(heights, key=float)
        path_heights[path] = heights
        heights = []
    return path_heights


def run_blend_synthesis(path_heights):
    for path in path_heights:
        now = datetime.now()
        current_time = now.strftime("%H_%m_%S")
        root_path = os.path.dirname(path)
        final_path = root_path + '/new_synthesis_' + current_time
        if not os.path.exists(final_path):
            os.chdir(root_path)
            os.mkdir(final_path)
            src_file = 'BLEND.RData'
            dest_location = final_path
            copy(src_file, dest_location)
        for height in path_heights[path]:
            os.chdir(final_path)
            subprocess.call(['touch', 'null.txt'], stdout=subprocess.PIPE) 
            command = ['blend', '-s', '{} {}'.format(height+0.001, height)]
            print(command)
            proc = subprocess.Popen(command,
                                    stdin=subprocess.PIPE,
                                    stdout=subprocess.PIPE,
                                    stderr=subprocess.PIPE,
                                    universal_newlines=True)
            (output, err) = proc.communicate()
            print(output)
            print("ERROR={}".format(err))


root_path = os.getcwd()
promising_heights = 'PROMISING_CLUSTERS_HEIGHTS.txt'
promising_heights_paths = find_files(root_path, promising_heights)
print(promising_heights_paths)

path_heights = process_promising_heights(promising_heights_paths)
print(path_heights)

run_blend_synthesis(path_heights)
